diff --git a/pufferlib/extensions.c b/pufferlib/extensions.c
index 497a423..6fd5416 100644
--- a/pufferlib/extensions.c
+++ b/pufferlib/extensions.c
@@ -1,4 +1,4 @@
-/* Generated by Cython 3.0.6 */
+/* Generated by Cython 3.0.10 */
 
 /* BEGIN: Cython Metadata
 {
@@ -36,10 +36,10 @@ END: Cython Metadata */
 #else
 #define __PYX_EXTRA_ABI_MODULE_NAME ""
 #endif
-#define CYTHON_ABI "3_0_6" __PYX_EXTRA_ABI_MODULE_NAME
+#define CYTHON_ABI "3_0_10" __PYX_EXTRA_ABI_MODULE_NAME
 #define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
 #define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
-#define CYTHON_HEX_VERSION 0x030006F0
+#define CYTHON_HEX_VERSION 0x03000AF0
 #define CYTHON_FUTURE_DIVISION 1
 #include <stddef.h>
 #ifndef offsetof
@@ -131,6 +131,8 @@ END: Cython Metadata */
   #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
     #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
   #endif
+  #undef CYTHON_USE_FREELISTS
+  #define CYTHON_USE_FREELISTS 0
 #elif defined(PYPY_VERSION)
   #define CYTHON_COMPILING_IN_PYPY 1
   #define CYTHON_COMPILING_IN_CPYTHON 0
@@ -192,6 +194,8 @@ END: Cython Metadata */
   #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
     #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
   #endif
+  #undef CYTHON_USE_FREELISTS
+  #define CYTHON_USE_FREELISTS 0
 #elif defined(CYTHON_LIMITED_API)
   #ifdef Py_LIMITED_API
     #undef __PYX_LIMITED_VERSION_HEX
@@ -253,6 +257,8 @@ END: Cython Metadata */
   #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
     #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
   #endif
+  #undef CYTHON_USE_FREELISTS
+  #define CYTHON_USE_FREELISTS 0
 #elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
   #define CYTHON_COMPILING_IN_PYPY 0
   #define CYTHON_COMPILING_IN_CPYTHON 0
@@ -262,11 +268,17 @@ END: Cython Metadata */
   #ifndef CYTHON_USE_TYPE_SLOTS
     #define CYTHON_USE_TYPE_SLOTS 1
   #endif
+  #ifndef CYTHON_USE_TYPE_SPECS
+    #define CYTHON_USE_TYPE_SPECS 0
+  #endif
   #undef CYTHON_USE_PYTYPE_LOOKUP
   #define CYTHON_USE_PYTYPE_LOOKUP 0
   #ifndef CYTHON_USE_ASYNC_SLOTS
     #define CYTHON_USE_ASYNC_SLOTS 1
   #endif
+  #ifndef CYTHON_USE_PYLONG_INTERNALS
+    #define CYTHON_USE_PYLONG_INTERNALS 0
+  #endif
   #undef CYTHON_USE_PYLIST_INTERNALS
   #define CYTHON_USE_PYLIST_INTERNALS 0
   #ifndef CYTHON_USE_UNICODE_INTERNALS
@@ -274,8 +286,6 @@ END: Cython Metadata */
   #endif
   #undef CYTHON_USE_UNICODE_WRITER
   #define CYTHON_USE_UNICODE_WRITER 0
-  #undef CYTHON_USE_PYLONG_INTERNALS
-  #define CYTHON_USE_PYLONG_INTERNALS 0
   #ifndef CYTHON_AVOID_BORROWED_REFS
     #define CYTHON_AVOID_BORROWED_REFS 0
   #endif
@@ -287,11 +297,22 @@ END: Cython Metadata */
   #endif
   #undef CYTHON_FAST_THREAD_STATE
   #define CYTHON_FAST_THREAD_STATE 0
+  #undef CYTHON_FAST_GIL
+  #define CYTHON_FAST_GIL 0
+  #ifndef CYTHON_METH_FASTCALL
+    #define CYTHON_METH_FASTCALL 1
+  #endif
   #undef CYTHON_FAST_PYCALL
   #define CYTHON_FAST_PYCALL 0
+  #ifndef CYTHON_PEP487_INIT_SUBCLASS
+    #define CYTHON_PEP487_INIT_SUBCLASS 1
+  #endif
   #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
     #define CYTHON_PEP489_MULTI_PHASE_INIT 1
   #endif
+  #ifndef CYTHON_USE_MODULE_STATE
+    #define CYTHON_USE_MODULE_STATE 0
+  #endif
   #ifndef CYTHON_USE_TP_FINALIZE
     #define CYTHON_USE_TP_FINALIZE 1
   #endif
@@ -299,6 +320,12 @@ END: Cython Metadata */
   #define CYTHON_USE_DICT_VERSIONS 0
   #undef CYTHON_USE_EXC_INFO_STACK
   #define CYTHON_USE_EXC_INFO_STACK 0
+  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
+    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
+  #endif
+  #ifndef CYTHON_USE_FREELISTS
+    #define CYTHON_USE_FREELISTS 0
+  #endif
 #else
   #define CYTHON_COMPILING_IN_PYPY 0
   #define CYTHON_COMPILING_IN_CPYTHON 1
@@ -389,6 +416,9 @@ END: Cython Metadata */
   #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
     #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
   #endif
+  #ifndef CYTHON_USE_FREELISTS
+    #define CYTHON_USE_FREELISTS 1
+  #endif
 #endif
 #if !defined(CYTHON_FAST_PYCCALL)
 #define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
@@ -581,14 +611,14 @@ END: Cython Metadata */
         PyObject *exception_table = NULL;
         PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
         #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
-        PyObject *version_info; // borrowed
+        PyObject *version_info;
         PyObject *py_minor_version = NULL;
         #endif
         long minor_version = 0;
         PyObject *type, *value, *traceback;
         PyErr_Fetch(&type, &value, &traceback);
         #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
-        minor_version = 11; // we don't yet need to distinguish between versions > 11
+        minor_version = 11;
         #else
         if (!(version_info = PySys_GetObject("version_info"))) goto end;
         if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
@@ -646,7 +676,7 @@ END: Cython Metadata */
                                                     PyObject *fv, PyObject *cell, PyObject* fn,
                                                     PyObject *name, int fline, PyObject *lnos) {
     PyCodeObject *result;
-    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);  // we don't have access to __pyx_empty_bytes here
+    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
     if (!empty_bytes) return NULL;
     result =
       #if PY_VERSION_HEX >= 0x030C0000
@@ -732,8 +762,13 @@ END: Cython Metadata */
   typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                           Py_ssize_t nargs, PyObject *kwnames);
 #else
-  #define __Pyx_PyCFunctionFast _PyCFunctionFast
-  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
+  #if PY_VERSION_HEX >= 0x030d00A4
+  #  define __Pyx_PyCFunctionFast PyCFunctionFast
+  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
+  #else
+  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
+  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
+  #endif
 #endif
 #if CYTHON_METH_FASTCALL
   #define __Pyx_METH_FASTCALL METH_FASTCALL
@@ -1085,7 +1120,7 @@ static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict,
   #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
   #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
 #endif
-#if PY_VERSION_HEX >= 0x030d00A1
+#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
   #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
 #else
   static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
@@ -1172,7 +1207,7 @@ static CYTHON_INLINE float __PYX_NAN() {
 #endif
 
 #define __PYX_MARK_ERR_POS(f_index, lineno) \
-    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
+    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__;  (void)__pyx_clineno; }
 #define __PYX_ERR(f_index, lineno, Ln_error) \
     { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }
 
@@ -1275,24 +1310,7 @@ static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
 #define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
 #define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
 #define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
-#if CYTHON_COMPILING_IN_LIMITED_API
-static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
-{
-    const wchar_t *u_end = u;
-    while (*u_end++) ;
-    return (size_t)(u_end - u - 1);
-}
-#else
-static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
-{
-    const Py_UNICODE *u_end = u;
-    while (*u_end++) ;
-    return (size_t)(u_end - u - 1);
-}
-#endif
 #define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
-#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
-#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
 #define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
 #define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
 #define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
@@ -1342,7 +1360,7 @@ static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
   #endif
   typedef Py_ssize_t  __Pyx_compact_pylong;
   typedef size_t  __Pyx_compact_upylong;
-  #else  // Py < 3.12
+  #else
   #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
   #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
   #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
@@ -1719,8 +1737,8 @@ static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int
     #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
     #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
 #else
-    #define __Pyx_Arg_NewRef_VARARGS(arg) arg // no-op
-    #define __Pyx_Arg_XDECREF_VARARGS(arg) // no-op - arg is borrowed
+    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
+    #define __Pyx_Arg_XDECREF_VARARGS(arg)
 #endif
 #define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
 #define __Pyx_KwValues_VARARGS(args, nargs) NULL
@@ -1736,8 +1754,9 @@ static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int
   #else
     #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
   #endif
-    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg // no-op, __Pyx_Arg_FASTCALL is direct and this needs
-    #define __Pyx_Arg_XDECREF_FASTCALL(arg)  // no-op - arg was returned from array
+    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
+                                                   to have the same reference counting */
+    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
 #else
     #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
     #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
@@ -1951,7 +1970,7 @@ typedef struct {
 #endif
     void *defaults;
     int defaults_pyobjects;
-    size_t defaults_size;  // used by FusedFunction for copying defaults
+    size_t defaults_size;
     int flags;
     PyObject *defaults_tuple;
     PyObject *defaults_kwdict;
@@ -2382,7 +2401,6 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
   PyObject *(*__pyx_t_9)(PyObject *);
-  PyObject *(*__pyx_t_10)(PyObject *);
   int __pyx_lineno = 0;
   const char *__pyx_filename = NULL;
   int __pyx_clineno = 0;
@@ -2393,7 +2411,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
  * 
  *     if isinstance(d, dict):             # <<<<<<<<<<<<<<
  *         d_dict = <dict> d
- *         for key, value in sorted(d_dict.items()):
+ *         # TODO: This sort is here to maintain canonical order
  */
   __pyx_t_1 = PyDict_Check(__pyx_v_d); 
   if (__pyx_t_1) {
@@ -2402,33 +2420,33 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
  * 
  *     if isinstance(d, dict):
  *         d_dict = <dict> d             # <<<<<<<<<<<<<<
- *         for key, value in sorted(d_dict.items()):
- *             flatten_helper(value, flat_data)
+ *         # TODO: This sort is here to maintain canonical order
+ *         # for envs that return in variable order, but it is slow
  */
     __pyx_t_2 = __pyx_v_d;
     __Pyx_INCREF(__pyx_t_2);
     __pyx_v_d_dict = ((PyObject*)__pyx_t_2);
     __pyx_t_2 = 0;
 
-    /* "pufferlib/extensions.pyx":18
- *     if isinstance(d, dict):
- *         d_dict = <dict> d
+    /* "pufferlib/extensions.pyx":22
+ *         # Are there any other options?
+ *         # NOTE: There is a corresponding sort in flatten_structure
  *         for key, value in sorted(d_dict.items()):             # <<<<<<<<<<<<<<
  *             flatten_helper(value, flat_data)
  *     elif isinstance(d, list):
  */
     if (unlikely(__pyx_v_d_dict == Py_None)) {
       PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
-      __PYX_ERR(0, 18, __pyx_L1_error)
+      __PYX_ERR(0, 22, __pyx_L1_error)
     }
-    __pyx_t_3 = __Pyx_PyDict_Items(__pyx_v_d_dict); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 18, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyDict_Items(__pyx_v_d_dict); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
-    __pyx_t_4 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 18, __pyx_L1_error)
+    __pyx_t_4 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
     __pyx_t_2 = ((PyObject*)__pyx_t_4);
     __pyx_t_4 = 0;
-    __pyx_t_5 = PyList_Sort(__pyx_t_2); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 18, __pyx_L1_error)
+    __pyx_t_5 = PyList_Sort(__pyx_t_2); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 22, __pyx_L1_error)
     __pyx_t_4 = __pyx_t_2; __Pyx_INCREF(__pyx_t_4);
     __pyx_t_6 = 0;
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -2436,14 +2454,14 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
       {
         Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_4);
         #if !CYTHON_ASSUME_SAFE_MACROS
-        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 18, __pyx_L1_error)
+        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
         #endif
         if (__pyx_t_6 >= __pyx_temp) break;
       }
       #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 18, __pyx_L1_error)
+      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
       #else
-      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       #endif
       if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
@@ -2452,7 +2470,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
         if (unlikely(size != 2)) {
           if (size > 2) __Pyx_RaiseTooManyValuesError(2);
           else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-          __PYX_ERR(0, 18, __pyx_L1_error)
+          __PYX_ERR(0, 22, __pyx_L1_error)
         }
         #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
         if (likely(PyTuple_CheckExact(sequence))) {
@@ -2465,15 +2483,15 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
         __Pyx_INCREF(__pyx_t_3);
         __Pyx_INCREF(__pyx_t_7);
         #else
-        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 18, __pyx_L1_error)
+        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_3);
-        __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 18, __pyx_L1_error)
+        __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 22, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_7);
         #endif
         __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
       } else {
         Py_ssize_t index = -1;
-        __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 18, __pyx_L1_error)
+        __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 22, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_8);
         __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
         __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_8);
@@ -2481,7 +2499,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
         __Pyx_GOTREF(__pyx_t_3);
         index = 1; __pyx_t_7 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L6_unpacking_failed;
         __Pyx_GOTREF(__pyx_t_7);
-        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
+        if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
         __pyx_t_9 = NULL;
         __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
         goto __pyx_L7_unpacking_done;
@@ -2489,7 +2507,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
         __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
         __pyx_t_9 = NULL;
         if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
-        __PYX_ERR(0, 18, __pyx_L1_error)
+        __PYX_ERR(0, 22, __pyx_L1_error)
         __pyx_L7_unpacking_done:;
       }
       __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_3);
@@ -2497,18 +2515,18 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
       __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_7);
       __pyx_t_7 = 0;
 
-      /* "pufferlib/extensions.pyx":19
- *         d_dict = <dict> d
+      /* "pufferlib/extensions.pyx":23
+ *         # NOTE: There is a corresponding sort in flatten_structure
  *         for key, value in sorted(d_dict.items()):
  *             flatten_helper(value, flat_data)             # <<<<<<<<<<<<<<
  *     elif isinstance(d, list):
  *         d_list = <list> d
  */
-      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_value, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 19, __pyx_L1_error)
+      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_value, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 23, __pyx_L1_error)
 
-      /* "pufferlib/extensions.pyx":18
- *     if isinstance(d, dict):
- *         d_dict = <dict> d
+      /* "pufferlib/extensions.pyx":22
+ *         # Are there any other options?
+ *         # NOTE: There is a corresponding sort in flatten_structure
  *         for key, value in sorted(d_dict.items()):             # <<<<<<<<<<<<<<
  *             flatten_helper(value, flat_data)
  *     elif isinstance(d, list):
@@ -2521,26 +2539,26 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
  * 
  *     if isinstance(d, dict):             # <<<<<<<<<<<<<<
  *         d_dict = <dict> d
- *         for key, value in sorted(d_dict.items()):
+ *         # TODO: This sort is here to maintain canonical order
  */
     goto __pyx_L3;
   }
 
-  /* "pufferlib/extensions.pyx":20
+  /* "pufferlib/extensions.pyx":24
  *         for key, value in sorted(d_dict.items()):
  *             flatten_helper(value, flat_data)
  *     elif isinstance(d, list):             # <<<<<<<<<<<<<<
  *         d_list = <list> d
- *         for item in d_list.items:
+ *         for item in d_list:
  */
   __pyx_t_1 = PyList_Check(__pyx_v_d); 
   if (__pyx_t_1) {
 
-    /* "pufferlib/extensions.pyx":21
+    /* "pufferlib/extensions.pyx":25
  *             flatten_helper(value, flat_data)
  *     elif isinstance(d, list):
  *         d_list = <list> d             # <<<<<<<<<<<<<<
- *         for item in d_list.items:
+ *         for item in d_list:
  *             flatten_helper(item, flat_data)
  */
     __pyx_t_4 = __pyx_v_d;
@@ -2548,102 +2566,67 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
     __pyx_v_d_list = ((PyObject*)__pyx_t_4);
     __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":22
+    /* "pufferlib/extensions.pyx":26
  *     elif isinstance(d, list):
  *         d_list = <list> d
- *         for item in d_list.items:             # <<<<<<<<<<<<<<
+ *         for item in d_list:             # <<<<<<<<<<<<<<
  *             flatten_helper(item, flat_data)
  *     elif isinstance(d, tuple):
  */
-    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_d_list, __pyx_n_s_items); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
-      __pyx_t_2 = __pyx_t_4; __Pyx_INCREF(__pyx_t_2);
-      __pyx_t_6 = 0;
-      __pyx_t_10 = NULL;
-    } else {
-      __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_2);
-      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 22, __pyx_L1_error)
+    if (unlikely(__pyx_v_d_list == Py_None)) {
+      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
+      __PYX_ERR(0, 26, __pyx_L1_error)
     }
-    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+    __pyx_t_4 = __pyx_v_d_list; __Pyx_INCREF(__pyx_t_4);
+    __pyx_t_6 = 0;
     for (;;) {
-      if (likely(!__pyx_t_10)) {
-        if (likely(PyList_CheckExact(__pyx_t_2))) {
-          {
-            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_2);
-            #if !CYTHON_ASSUME_SAFE_MACROS
-            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
-            #endif
-            if (__pyx_t_6 >= __pyx_temp) break;
-          }
-          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
-          #else
-          __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_4);
-          #endif
-        } else {
-          {
-            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_2);
-            #if !CYTHON_ASSUME_SAFE_MACROS
-            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
-            #endif
-            if (__pyx_t_6 >= __pyx_temp) break;
-          }
-          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 22, __pyx_L1_error)
-          #else
-          __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 22, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_4);
-          #endif
-        }
-      } else {
-        __pyx_t_4 = __pyx_t_10(__pyx_t_2);
-        if (unlikely(!__pyx_t_4)) {
-          PyObject* exc_type = PyErr_Occurred();
-          if (exc_type) {
-            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
-            else __PYX_ERR(0, 22, __pyx_L1_error)
-          }
-          break;
-        }
-        __Pyx_GOTREF(__pyx_t_4);
+      {
+        Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_4);
+        #if !CYTHON_ASSUME_SAFE_MACROS
+        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 26, __pyx_L1_error)
+        #endif
+        if (__pyx_t_6 >= __pyx_temp) break;
       }
-      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
-      __pyx_t_4 = 0;
+      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
+      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 26, __pyx_L1_error)
+      #else
+      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
+      #endif
+      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
+      __pyx_t_2 = 0;
 
-      /* "pufferlib/extensions.pyx":23
+      /* "pufferlib/extensions.pyx":27
  *         d_list = <list> d
- *         for item in d_list.items:
+ *         for item in d_list:
  *             flatten_helper(item, flat_data)             # <<<<<<<<<<<<<<
  *     elif isinstance(d, tuple):
  *         d_tuple = <tuple> d
  */
-      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_item, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 23, __pyx_L1_error)
+      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_item, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 27, __pyx_L1_error)
 
-      /* "pufferlib/extensions.pyx":22
+      /* "pufferlib/extensions.pyx":26
  *     elif isinstance(d, list):
  *         d_list = <list> d
- *         for item in d_list.items:             # <<<<<<<<<<<<<<
+ *         for item in d_list:             # <<<<<<<<<<<<<<
  *             flatten_helper(item, flat_data)
  *     elif isinstance(d, tuple):
  */
     }
-    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":20
+    /* "pufferlib/extensions.pyx":24
  *         for key, value in sorted(d_dict.items()):
  *             flatten_helper(value, flat_data)
  *     elif isinstance(d, list):             # <<<<<<<<<<<<<<
  *         d_list = <list> d
- *         for item in d_list.items:
+ *         for item in d_list:
  */
     goto __pyx_L3;
   }
 
-  /* "pufferlib/extensions.pyx":24
- *         for item in d_list.items:
+  /* "pufferlib/extensions.pyx":28
+ *         for item in d_list:
  *             flatten_helper(item, flat_data)
  *     elif isinstance(d, tuple):             # <<<<<<<<<<<<<<
  *         d_tuple = <tuple> d
@@ -2652,19 +2635,19 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
   __pyx_t_1 = PyTuple_Check(__pyx_v_d); 
   if (__pyx_t_1) {
 
-    /* "pufferlib/extensions.pyx":25
+    /* "pufferlib/extensions.pyx":29
  *             flatten_helper(item, flat_data)
  *     elif isinstance(d, tuple):
  *         d_tuple = <tuple> d             # <<<<<<<<<<<<<<
  *         for item in d_tuple:
  *             flatten_helper(item, flat_data)
  */
-    __pyx_t_2 = __pyx_v_d;
-    __Pyx_INCREF(__pyx_t_2);
-    __pyx_v_d_tuple = ((PyObject*)__pyx_t_2);
-    __pyx_t_2 = 0;
+    __pyx_t_4 = __pyx_v_d;
+    __Pyx_INCREF(__pyx_t_4);
+    __pyx_v_d_tuple = ((PyObject*)__pyx_t_4);
+    __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":26
+    /* "pufferlib/extensions.pyx":30
  *     elif isinstance(d, tuple):
  *         d_tuple = <tuple> d
  *         for item in d_tuple:             # <<<<<<<<<<<<<<
@@ -2673,37 +2656,37 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
  */
     if (unlikely(__pyx_v_d_tuple == Py_None)) {
       PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
-      __PYX_ERR(0, 26, __pyx_L1_error)
+      __PYX_ERR(0, 30, __pyx_L1_error)
     }
-    __pyx_t_2 = __pyx_v_d_tuple; __Pyx_INCREF(__pyx_t_2);
+    __pyx_t_4 = __pyx_v_d_tuple; __Pyx_INCREF(__pyx_t_4);
     __pyx_t_6 = 0;
     for (;;) {
       {
-        Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_2);
+        Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_4);
         #if !CYTHON_ASSUME_SAFE_MACROS
-        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 26, __pyx_L1_error)
+        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 30, __pyx_L1_error)
         #endif
         if (__pyx_t_6 >= __pyx_temp) break;
       }
       #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 26, __pyx_L1_error)
+      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 30, __pyx_L1_error)
       #else
-      __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 26, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
+      __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
       #endif
-      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
-      __pyx_t_4 = 0;
+      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
+      __pyx_t_2 = 0;
 
-      /* "pufferlib/extensions.pyx":27
+      /* "pufferlib/extensions.pyx":31
  *         d_tuple = <tuple> d
  *         for item in d_tuple:
  *             flatten_helper(item, flat_data)             # <<<<<<<<<<<<<<
  *     else:
  *         flat_data.append(d)
  */
-      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_item, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 27, __pyx_L1_error)
+      __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_item, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 31, __pyx_L1_error)
 
-      /* "pufferlib/extensions.pyx":26
+      /* "pufferlib/extensions.pyx":30
  *     elif isinstance(d, tuple):
  *         d_tuple = <tuple> d
  *         for item in d_tuple:             # <<<<<<<<<<<<<<
@@ -2711,10 +2694,10 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
  *     else:
  */
     }
-    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":24
- *         for item in d_list.items:
+    /* "pufferlib/extensions.pyx":28
+ *         for item in d_list:
  *             flatten_helper(item, flat_data)
  *     elif isinstance(d, tuple):             # <<<<<<<<<<<<<<
  *         d_tuple = <tuple> d
@@ -2723,7 +2706,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
     goto __pyx_L3;
   }
 
-  /* "pufferlib/extensions.pyx":29
+  /* "pufferlib/extensions.pyx":33
  *             flatten_helper(item, flat_data)
  *     else:
  *         flat_data.append(d)             # <<<<<<<<<<<<<<
@@ -2733,9 +2716,9 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
   /*else*/ {
     if (unlikely(__pyx_v_flat_data == Py_None)) {
       PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
-      __PYX_ERR(0, 29, __pyx_L1_error)
+      __PYX_ERR(0, 33, __pyx_L1_error)
     }
-    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_flat_data, __pyx_v_d); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 29, __pyx_L1_error)
+    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_flat_data, __pyx_v_d); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 33, __pyx_L1_error)
   }
   __pyx_L3:;
 
@@ -2766,7 +2749,7 @@ static void __pyx_f_9pufferlib_10extensions_flatten_helper(PyObject *__pyx_v_d,
   __Pyx_RefNannyFinishContext();
 }
 
-/* "pufferlib/extensions.pyx":31
+/* "pufferlib/extensions.pyx":35
  *         flat_data.append(d)
  * 
  * def flatten(data):             # <<<<<<<<<<<<<<
@@ -2827,12 +2810,12 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
           (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
           kw_args--;
         }
-        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 31, __pyx_L3_error)
+        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 35, __pyx_L3_error)
         else goto __pyx_L5_argtuple_error;
       }
       if (unlikely(kw_args > 0)) {
         const Py_ssize_t kwd_pos_args = __pyx_nargs;
-        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "flatten") < 0)) __PYX_ERR(0, 31, __pyx_L3_error)
+        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "flatten") < 0)) __PYX_ERR(0, 35, __pyx_L3_error)
       }
     } else if (unlikely(__pyx_nargs != 1)) {
       goto __pyx_L5_argtuple_error;
@@ -2843,7 +2826,7 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
   }
   goto __pyx_L6_skip;
   __pyx_L5_argtuple_error:;
-  __Pyx_RaiseArgtupleInvalid("flatten", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 31, __pyx_L3_error)
+  __Pyx_RaiseArgtupleInvalid("flatten", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 35, __pyx_L3_error)
   __pyx_L6_skip:;
   goto __pyx_L4_argument_unpacking_done;
   __pyx_L3_error:;
@@ -2880,28 +2863,28 @@ static PyObject *__pyx_pf_9pufferlib_10extensions_flatten(CYTHON_UNUSED PyObject
   int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("flatten", 1);
 
-  /* "pufferlib/extensions.pyx":32
+  /* "pufferlib/extensions.pyx":36
  * 
  * def flatten(data):
  *     cdef list flat_data = []             # <<<<<<<<<<<<<<
  *     flatten_helper(data, flat_data)
  *     return flat_data
  */
-  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
+  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_v_flat_data = ((PyObject*)__pyx_t_1);
   __pyx_t_1 = 0;
 
-  /* "pufferlib/extensions.pyx":33
+  /* "pufferlib/extensions.pyx":37
  * def flatten(data):
  *     cdef list flat_data = []
  *     flatten_helper(data, flat_data)             # <<<<<<<<<<<<<<
  *     return flat_data
  * 
  */
-  __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_data, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 33, __pyx_L1_error)
+  __pyx_f_9pufferlib_10extensions_flatten_helper(__pyx_v_data, __pyx_v_flat_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 37, __pyx_L1_error)
 
-  /* "pufferlib/extensions.pyx":34
+  /* "pufferlib/extensions.pyx":38
  *     cdef list flat_data = []
  *     flatten_helper(data, flat_data)
  *     return flat_data             # <<<<<<<<<<<<<<
@@ -2913,7 +2896,7 @@ static PyObject *__pyx_pf_9pufferlib_10extensions_flatten(CYTHON_UNUSED PyObject
   __pyx_r = __pyx_v_flat_data;
   goto __pyx_L0;
 
-  /* "pufferlib/extensions.pyx":31
+  /* "pufferlib/extensions.pyx":35
  *         flat_data.append(d)
  * 
  * def flatten(data):             # <<<<<<<<<<<<<<
@@ -2933,7 +2916,7 @@ static PyObject *__pyx_pf_9pufferlib_10extensions_flatten(CYTHON_UNUSED PyObject
   return __pyx_r;
 }
 
-/* "pufferlib/extensions.pyx":36
+/* "pufferlib/extensions.pyx":40
  *     return flat_data
  * 
  * cdef unflatten_helper(list flat_data, list structure, int struct_idx, int data_idx):             # <<<<<<<<<<<<<<
@@ -2968,7 +2951,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
   int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("unflatten_helper", 1);
 
-  /* "pufferlib/extensions.pyx":42
+  /* "pufferlib/extensions.pyx":46
  *     cdef list result_list
  * 
  *     token = <int> structure[struct_idx]             # <<<<<<<<<<<<<<
@@ -2977,12 +2960,12 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
   if (unlikely(__pyx_v_structure == Py_None)) {
     PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-    __PYX_ERR(0, 42, __pyx_L1_error)
+    __PYX_ERR(0, 46, __pyx_L1_error)
   }
-  __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 46, __pyx_L1_error)
   __pyx_v_token = ((int)__pyx_t_1);
 
-  /* "pufferlib/extensions.pyx":43
+  /* "pufferlib/extensions.pyx":47
  * 
  *     token = <int> structure[struct_idx]
  *     struct_idx += 1             # <<<<<<<<<<<<<<
@@ -2991,25 +2974,25 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
   __pyx_v_struct_idx = (__pyx_v_struct_idx + 1);
 
-  /* "pufferlib/extensions.pyx":45
+  /* "pufferlib/extensions.pyx":49
  *     struct_idx += 1
  * 
  *     if token == DICT:             # <<<<<<<<<<<<<<
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  */
-  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_DICT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
+  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_DICT); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 49, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 45, __pyx_L1_error)
+  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 49, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 45, __pyx_L1_error)
+  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 49, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
   if (__pyx_t_5) {
 
-    /* "pufferlib/extensions.pyx":46
+    /* "pufferlib/extensions.pyx":50
  * 
  *     if token == DICT:
  *         n = <int> structure[struct_idx]             # <<<<<<<<<<<<<<
@@ -3018,12 +3001,12 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     if (unlikely(__pyx_v_structure == Py_None)) {
       PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-      __PYX_ERR(0, 46, __pyx_L1_error)
+      __PYX_ERR(0, 50, __pyx_L1_error)
     }
-    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 46, __pyx_L1_error)
+    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 50, __pyx_L1_error)
     __pyx_v_n = ((int)__pyx_t_1);
 
-    /* "pufferlib/extensions.pyx":47
+    /* "pufferlib/extensions.pyx":51
  *     if token == DICT:
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1             # <<<<<<<<<<<<<<
@@ -3032,19 +3015,19 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     __pyx_v_struct_idx = (__pyx_v_struct_idx + 1);
 
-    /* "pufferlib/extensions.pyx":48
+    /* "pufferlib/extensions.pyx":52
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  *         result_dict = {}             # <<<<<<<<<<<<<<
  *         for _ in range(n):
  *             key = structure[struct_idx]
  */
-    __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 48, __pyx_L1_error)
+    __pyx_t_4 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 52, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_v_result_dict = ((PyObject*)__pyx_t_4);
     __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":49
+    /* "pufferlib/extensions.pyx":53
  *         struct_idx += 1
  *         result_dict = {}
  *         for _ in range(n):             # <<<<<<<<<<<<<<
@@ -3056,7 +3039,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
       __pyx_v__ = __pyx_t_7;
 
-      /* "pufferlib/extensions.pyx":50
+      /* "pufferlib/extensions.pyx":54
  *         result_dict = {}
  *         for _ in range(n):
  *             key = structure[struct_idx]             # <<<<<<<<<<<<<<
@@ -3065,21 +3048,21 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
       if (unlikely(__pyx_v_structure == Py_None)) {
         PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-        __PYX_ERR(0, 50, __pyx_L1_error)
+        __PYX_ERR(0, 54, __pyx_L1_error)
       }
       __pyx_t_4 = PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx);
       __Pyx_INCREF(__pyx_t_4);
       __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_4);
       __pyx_t_4 = 0;
 
-      /* "pufferlib/extensions.pyx":51
+      /* "pufferlib/extensions.pyx":55
  *         for _ in range(n):
  *             key = structure[struct_idx]
  *             result_dict[key], struct_idx, data_idx = unflatten_helper(             # <<<<<<<<<<<<<<
  *                 flat_data, structure, struct_idx + 1, data_idx)
  *         return result_dict, struct_idx, data_idx
  */
-      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, (__pyx_v_struct_idx + 1), __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 51, __pyx_L1_error)
+      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, (__pyx_v_struct_idx + 1), __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 55, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
         PyObject* sequence = __pyx_t_4;
@@ -3087,7 +3070,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         if (unlikely(size != 3)) {
           if (size > 3) __Pyx_RaiseTooManyValuesError(3);
           else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-          __PYX_ERR(0, 51, __pyx_L1_error)
+          __PYX_ERR(0, 55, __pyx_L1_error)
         }
         #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
         if (likely(PyTuple_CheckExact(sequence))) {
@@ -3103,17 +3086,17 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_INCREF(__pyx_t_2);
         __Pyx_INCREF(__pyx_t_8);
         #else
-        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
+        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 55, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_3);
-        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
+        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_2);
-        __pyx_t_8 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 51, __pyx_L1_error)
+        __pyx_t_8 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 55, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_8);
         #endif
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       } else {
         Py_ssize_t index = -1;
-        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 51, __pyx_L1_error)
+        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 55, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_9);
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
         __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_9);
@@ -3123,7 +3106,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_GOTREF(__pyx_t_2);
         index = 2; __pyx_t_8 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_8)) goto __pyx_L6_unpacking_failed;
         __Pyx_GOTREF(__pyx_t_8);
-        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
+        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
         __pyx_t_10 = NULL;
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         goto __pyx_L7_unpacking_done;
@@ -3131,20 +3114,20 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         __pyx_t_10 = NULL;
         if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
-        __PYX_ERR(0, 51, __pyx_L1_error)
+        __PYX_ERR(0, 55, __pyx_L1_error)
         __pyx_L7_unpacking_done:;
       }
-      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 51, __pyx_L1_error)
+      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 55, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 51, __pyx_L1_error)
+      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 55, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      if (unlikely((PyDict_SetItem(__pyx_v_result_dict, __pyx_v_key, __pyx_t_3) < 0))) __PYX_ERR(0, 51, __pyx_L1_error)
+      if (unlikely((PyDict_SetItem(__pyx_v_result_dict, __pyx_v_key, __pyx_t_3) < 0))) __PYX_ERR(0, 55, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
       __pyx_v_struct_idx = __pyx_t_11;
       __pyx_v_data_idx = __pyx_t_12;
     }
 
-    /* "pufferlib/extensions.pyx":53
+    /* "pufferlib/extensions.pyx":57
  *             result_dict[key], struct_idx, data_idx = unflatten_helper(
  *                 flat_data, structure, struct_idx + 1, data_idx)
  *         return result_dict, struct_idx, data_idx             # <<<<<<<<<<<<<<
@@ -3152,26 +3135,26 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  *         n = <int> structure[struct_idx]
  */
     __Pyx_XDECREF(__pyx_r);
-    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 53, __pyx_L1_error)
+    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 57, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 53, __pyx_L1_error)
+    __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 57, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_8);
-    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 53, __pyx_L1_error)
+    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_INCREF(__pyx_v_result_dict);
     __Pyx_GIVEREF(__pyx_v_result_dict);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_result_dict)) __PYX_ERR(0, 53, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_result_dict)) __PYX_ERR(0, 57, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_4);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4)) __PYX_ERR(0, 53, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4)) __PYX_ERR(0, 57, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_8);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_8)) __PYX_ERR(0, 53, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_8)) __PYX_ERR(0, 57, __pyx_L1_error);
     __pyx_t_4 = 0;
     __pyx_t_8 = 0;
     __pyx_r = __pyx_t_2;
     __pyx_t_2 = 0;
     goto __pyx_L0;
 
-    /* "pufferlib/extensions.pyx":45
+    /* "pufferlib/extensions.pyx":49
  *     struct_idx += 1
  * 
  *     if token == DICT:             # <<<<<<<<<<<<<<
@@ -3180,25 +3163,25 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
   }
 
-  /* "pufferlib/extensions.pyx":54
+  /* "pufferlib/extensions.pyx":58
  *                 flat_data, structure, struct_idx + 1, data_idx)
  *         return result_dict, struct_idx, data_idx
  *     elif token == LIST:             # <<<<<<<<<<<<<<
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  */
-  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 54, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 58, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_LIST); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 54, __pyx_L1_error)
+  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_LIST); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 58, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_8);
-  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_8, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 54, __pyx_L1_error)
+  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_8, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 58, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
   __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 54, __pyx_L1_error)
+  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 58, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
   if (__pyx_t_5) {
 
-    /* "pufferlib/extensions.pyx":55
+    /* "pufferlib/extensions.pyx":59
  *         return result_dict, struct_idx, data_idx
  *     elif token == LIST:
  *         n = <int> structure[struct_idx]             # <<<<<<<<<<<<<<
@@ -3207,12 +3190,12 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     if (unlikely(__pyx_v_structure == Py_None)) {
       PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-      __PYX_ERR(0, 55, __pyx_L1_error)
+      __PYX_ERR(0, 59, __pyx_L1_error)
     }
-    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 55, __pyx_L1_error)
+    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L1_error)
     __pyx_v_n = ((int)__pyx_t_1);
 
-    /* "pufferlib/extensions.pyx":56
+    /* "pufferlib/extensions.pyx":60
  *     elif token == LIST:
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1             # <<<<<<<<<<<<<<
@@ -3221,26 +3204,26 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     __pyx_v_struct_idx = (__pyx_v_struct_idx + 1);
 
-    /* "pufferlib/extensions.pyx":57
+    /* "pufferlib/extensions.pyx":61
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  *         result_list = [None] * n             # <<<<<<<<<<<<<<
  *         for i in range(n):
  *             result_list[i], struct_idx, data_idx = unflatten_helper(
  */
-    __pyx_t_4 = PyList_New(1 * ((__pyx_v_n<0) ? 0:__pyx_v_n)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 57, __pyx_L1_error)
+    __pyx_t_4 = PyList_New(1 * ((__pyx_v_n<0) ? 0:__pyx_v_n)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 61, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     { Py_ssize_t __pyx_temp;
       for (__pyx_temp=0; __pyx_temp < __pyx_v_n; __pyx_temp++) {
         __Pyx_INCREF(Py_None);
         __Pyx_GIVEREF(Py_None);
-        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, __pyx_temp, Py_None)) __PYX_ERR(0, 57, __pyx_L1_error);
+        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, __pyx_temp, Py_None)) __PYX_ERR(0, 61, __pyx_L1_error);
       }
     }
     __pyx_v_result_list = ((PyObject*)__pyx_t_4);
     __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":58
+    /* "pufferlib/extensions.pyx":62
  *         struct_idx += 1
  *         result_list = [None] * n
  *         for i in range(n):             # <<<<<<<<<<<<<<
@@ -3252,14 +3235,14 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
       __pyx_v_i = __pyx_t_7;
 
-      /* "pufferlib/extensions.pyx":59
+      /* "pufferlib/extensions.pyx":63
  *         result_list = [None] * n
  *         for i in range(n):
  *             result_list[i], struct_idx, data_idx = unflatten_helper(             # <<<<<<<<<<<<<<
  *                 flat_data, structure, struct_idx, data_idx)
  *         return result_list, struct_idx, data_idx
  */
-      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, __pyx_v_struct_idx, __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 59, __pyx_L1_error)
+      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, __pyx_v_struct_idx, __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 63, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
         PyObject* sequence = __pyx_t_4;
@@ -3267,7 +3250,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         if (unlikely(size != 3)) {
           if (size > 3) __Pyx_RaiseTooManyValuesError(3);
           else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-          __PYX_ERR(0, 59, __pyx_L1_error)
+          __PYX_ERR(0, 63, __pyx_L1_error)
         }
         #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
         if (likely(PyTuple_CheckExact(sequence))) {
@@ -3283,17 +3266,17 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_INCREF(__pyx_t_2);
         __Pyx_INCREF(__pyx_t_3);
         #else
-        __pyx_t_8 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 59, __pyx_L1_error)
+        __pyx_t_8 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 63, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_8);
-        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
+        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_2);
-        __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
+        __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 63, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_3);
         #endif
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       } else {
         Py_ssize_t index = -1;
-        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 59, __pyx_L1_error)
+        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 63, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_9);
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
         __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_9);
@@ -3303,7 +3286,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_GOTREF(__pyx_t_2);
         index = 2; __pyx_t_3 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_3)) goto __pyx_L10_unpacking_failed;
         __Pyx_GOTREF(__pyx_t_3);
-        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
+        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
         __pyx_t_10 = NULL;
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         goto __pyx_L11_unpacking_done;
@@ -3311,20 +3294,20 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         __pyx_t_10 = NULL;
         if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
-        __PYX_ERR(0, 59, __pyx_L1_error)
+        __PYX_ERR(0, 63, __pyx_L1_error)
         __pyx_L11_unpacking_done:;
       }
-      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L1_error)
+      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L1_error)
+      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (unlikely((__Pyx_SetItemInt(__pyx_v_result_list, __pyx_v_i, __pyx_t_8, int, 1, __Pyx_PyInt_From_int, 1, 0, 0) < 0))) __PYX_ERR(0, 59, __pyx_L1_error)
+      if (unlikely((__Pyx_SetItemInt(__pyx_v_result_list, __pyx_v_i, __pyx_t_8, int, 1, __Pyx_PyInt_From_int, 1, 0, 0) < 0))) __PYX_ERR(0, 63, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
       __pyx_v_struct_idx = __pyx_t_12;
       __pyx_v_data_idx = __pyx_t_11;
     }
 
-    /* "pufferlib/extensions.pyx":61
+    /* "pufferlib/extensions.pyx":65
  *             result_list[i], struct_idx, data_idx = unflatten_helper(
  *                 flat_data, structure, struct_idx, data_idx)
  *         return result_list, struct_idx, data_idx             # <<<<<<<<<<<<<<
@@ -3332,26 +3315,26 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  *         n = <int> structure[struct_idx]
  */
     __Pyx_XDECREF(__pyx_r);
-    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 61, __pyx_L1_error)
+    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 65, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
-    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
+    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_INCREF(__pyx_v_result_list);
     __Pyx_GIVEREF(__pyx_v_result_list);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_result_list)) __PYX_ERR(0, 61, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_result_list)) __PYX_ERR(0, 65, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_4);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4)) __PYX_ERR(0, 61, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4)) __PYX_ERR(0, 65, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_3);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error);
     __pyx_t_4 = 0;
     __pyx_t_3 = 0;
     __pyx_r = __pyx_t_2;
     __pyx_t_2 = 0;
     goto __pyx_L0;
 
-    /* "pufferlib/extensions.pyx":54
+    /* "pufferlib/extensions.pyx":58
  *                 flat_data, structure, struct_idx + 1, data_idx)
  *         return result_dict, struct_idx, data_idx
  *     elif token == LIST:             # <<<<<<<<<<<<<<
@@ -3360,25 +3343,25 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
   }
 
-  /* "pufferlib/extensions.pyx":62
+  /* "pufferlib/extensions.pyx":66
  *                 flat_data, structure, struct_idx, data_idx)
  *         return result_list, struct_idx, data_idx
  *     elif token == TUPLE:             # <<<<<<<<<<<<<<
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  */
-  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_token); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_TUPLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
+  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_TUPLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 66, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 62, __pyx_L1_error)
+  __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 66, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 62, __pyx_L1_error)
+  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 66, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
   if (__pyx_t_5) {
 
-    /* "pufferlib/extensions.pyx":63
+    /* "pufferlib/extensions.pyx":67
  *         return result_list, struct_idx, data_idx
  *     elif token == TUPLE:
  *         n = <int> structure[struct_idx]             # <<<<<<<<<<<<<<
@@ -3387,12 +3370,12 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     if (unlikely(__pyx_v_structure == Py_None)) {
       PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-      __PYX_ERR(0, 63, __pyx_L1_error)
+      __PYX_ERR(0, 67, __pyx_L1_error)
     }
-    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L1_error)
+    __pyx_t_1 = __Pyx_PyInt_As_int(PyList_GET_ITEM(__pyx_v_structure, __pyx_v_struct_idx)); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L1_error)
     __pyx_v_n = ((int)__pyx_t_1);
 
-    /* "pufferlib/extensions.pyx":64
+    /* "pufferlib/extensions.pyx":68
  *     elif token == TUPLE:
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1             # <<<<<<<<<<<<<<
@@ -3401,26 +3384,26 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
     __pyx_v_struct_idx = (__pyx_v_struct_idx + 1);
 
-    /* "pufferlib/extensions.pyx":65
+    /* "pufferlib/extensions.pyx":69
  *         n = <int> structure[struct_idx]
  *         struct_idx += 1
  *         result_list = [None] * n             # <<<<<<<<<<<<<<
  *         for i in range(n):
  *             result_list[i], struct_idx, data_idx = unflatten_helper(
  */
-    __pyx_t_4 = PyList_New(1 * ((__pyx_v_n<0) ? 0:__pyx_v_n)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 65, __pyx_L1_error)
+    __pyx_t_4 = PyList_New(1 * ((__pyx_v_n<0) ? 0:__pyx_v_n)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 69, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     { Py_ssize_t __pyx_temp;
       for (__pyx_temp=0; __pyx_temp < __pyx_v_n; __pyx_temp++) {
         __Pyx_INCREF(Py_None);
         __Pyx_GIVEREF(Py_None);
-        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, __pyx_temp, Py_None)) __PYX_ERR(0, 65, __pyx_L1_error);
+        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, __pyx_temp, Py_None)) __PYX_ERR(0, 69, __pyx_L1_error);
       }
     }
     __pyx_v_result_list = ((PyObject*)__pyx_t_4);
     __pyx_t_4 = 0;
 
-    /* "pufferlib/extensions.pyx":66
+    /* "pufferlib/extensions.pyx":70
  *         struct_idx += 1
  *         result_list = [None] * n
  *         for i in range(n):             # <<<<<<<<<<<<<<
@@ -3432,14 +3415,14 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
       __pyx_v_i = __pyx_t_7;
 
-      /* "pufferlib/extensions.pyx":67
+      /* "pufferlib/extensions.pyx":71
  *         result_list = [None] * n
  *         for i in range(n):
  *             result_list[i], struct_idx, data_idx = unflatten_helper(             # <<<<<<<<<<<<<<
  *                 flat_data, structure, struct_idx, data_idx)
  *         return tuple(result_list), struct_idx, data_idx
  */
-      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, __pyx_v_struct_idx, __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 67, __pyx_L1_error)
+      __pyx_t_4 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, __pyx_v_struct_idx, __pyx_v_data_idx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 71, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
         PyObject* sequence = __pyx_t_4;
@@ -3447,7 +3430,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         if (unlikely(size != 3)) {
           if (size > 3) __Pyx_RaiseTooManyValuesError(3);
           else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-          __PYX_ERR(0, 67, __pyx_L1_error)
+          __PYX_ERR(0, 71, __pyx_L1_error)
         }
         #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
         if (likely(PyTuple_CheckExact(sequence))) {
@@ -3463,17 +3446,17 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_INCREF(__pyx_t_2);
         __Pyx_INCREF(__pyx_t_8);
         #else
-        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 67, __pyx_L1_error)
+        __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 71, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_3);
-        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 67, __pyx_L1_error)
+        __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_2);
-        __pyx_t_8 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 67, __pyx_L1_error)
+        __pyx_t_8 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 71, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_8);
         #endif
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       } else {
         Py_ssize_t index = -1;
-        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 67, __pyx_L1_error)
+        __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 71, __pyx_L1_error)
         __Pyx_GOTREF(__pyx_t_9);
         __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
         __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_9);
@@ -3483,7 +3466,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_GOTREF(__pyx_t_2);
         index = 2; __pyx_t_8 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_8)) goto __pyx_L14_unpacking_failed;
         __Pyx_GOTREF(__pyx_t_8);
-        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
+        if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
         __pyx_t_10 = NULL;
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         goto __pyx_L15_unpacking_done;
@@ -3491,20 +3474,20 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
         __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         __pyx_t_10 = NULL;
         if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
-        __PYX_ERR(0, 67, __pyx_L1_error)
+        __PYX_ERR(0, 71, __pyx_L1_error)
         __pyx_L15_unpacking_done:;
       }
-      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L1_error)
+      __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L1_error)
+      __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_8); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      if (unlikely((__Pyx_SetItemInt(__pyx_v_result_list, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 1, 0, 0) < 0))) __PYX_ERR(0, 67, __pyx_L1_error)
+      if (unlikely((__Pyx_SetItemInt(__pyx_v_result_list, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 1, 0, 0) < 0))) __PYX_ERR(0, 71, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
       __pyx_v_struct_idx = __pyx_t_11;
       __pyx_v_data_idx = __pyx_t_12;
     }
 
-    /* "pufferlib/extensions.pyx":69
+    /* "pufferlib/extensions.pyx":73
  *             result_list[i], struct_idx, data_idx = unflatten_helper(
  *                 flat_data, structure, struct_idx, data_idx)
  *         return tuple(result_list), struct_idx, data_idx             # <<<<<<<<<<<<<<
@@ -3512,20 +3495,20 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  *         return flat_data[data_idx], struct_idx, data_idx + 1
  */
     __Pyx_XDECREF(__pyx_r);
-    __pyx_t_4 = PyList_AsTuple(__pyx_v_result_list); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 69, __pyx_L1_error)
+    __pyx_t_4 = PyList_AsTuple(__pyx_v_result_list); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 73, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 69, __pyx_L1_error)
+    __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 73, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_8);
-    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_data_idx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
-    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 69, __pyx_L1_error)
+    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 73, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __Pyx_GIVEREF(__pyx_t_4);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(0, 69, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(0, 73, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_8);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_8)) __PYX_ERR(0, 69, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_8)) __PYX_ERR(0, 73, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_2);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error);
     __pyx_t_4 = 0;
     __pyx_t_8 = 0;
     __pyx_t_2 = 0;
@@ -3533,7 +3516,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     __pyx_t_3 = 0;
     goto __pyx_L0;
 
-    /* "pufferlib/extensions.pyx":62
+    /* "pufferlib/extensions.pyx":66
  *                 flat_data, structure, struct_idx, data_idx)
  *         return result_list, struct_idx, data_idx
  *     elif token == TUPLE:             # <<<<<<<<<<<<<<
@@ -3542,7 +3525,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
  */
   }
 
-  /* "pufferlib/extensions.pyx":71
+  /* "pufferlib/extensions.pyx":75
  *         return tuple(result_list), struct_idx, data_idx
  *     else:
  *         return flat_data[data_idx], struct_idx, data_idx + 1             # <<<<<<<<<<<<<<
@@ -3553,21 +3536,21 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     __Pyx_XDECREF(__pyx_r);
     if (unlikely(__pyx_v_flat_data == Py_None)) {
       PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-      __PYX_ERR(0, 71, __pyx_L1_error)
+      __PYX_ERR(0, 75, __pyx_L1_error)
     }
-    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 71, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_struct_idx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
-    __pyx_t_2 = __Pyx_PyInt_From_long((__pyx_v_data_idx + 1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyInt_From_long((__pyx_v_data_idx + 1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
-    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 71, __pyx_L1_error)
+    __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 75, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_8);
     __Pyx_INCREF(PyList_GET_ITEM(__pyx_v_flat_data, __pyx_v_data_idx));
     __Pyx_GIVEREF(PyList_GET_ITEM(__pyx_v_flat_data, __pyx_v_data_idx));
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 0, PyList_GET_ITEM(__pyx_v_flat_data, __pyx_v_data_idx))) __PYX_ERR(0, 71, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 0, PyList_GET_ITEM(__pyx_v_flat_data, __pyx_v_data_idx))) __PYX_ERR(0, 75, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_3);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_3)) __PYX_ERR(0, 71, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error);
     __Pyx_GIVEREF(__pyx_t_2);
-    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error);
+    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error);
     __pyx_t_3 = 0;
     __pyx_t_2 = 0;
     __pyx_r = __pyx_t_8;
@@ -3575,7 +3558,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
     goto __pyx_L0;
   }
 
-  /* "pufferlib/extensions.pyx":36
+  /* "pufferlib/extensions.pyx":40
  *     return flat_data
  * 
  * cdef unflatten_helper(list flat_data, list structure, int struct_idx, int data_idx):             # <<<<<<<<<<<<<<
@@ -3601,7 +3584,7 @@ static PyObject *__pyx_f_9pufferlib_10extensions_unflatten_helper(PyObject *__py
   return __pyx_r;
 }
 
-/* "pufferlib/extensions.pyx":73
+/* "pufferlib/extensions.pyx":77
  *         return flat_data[data_idx], struct_idx, data_idx + 1
  * 
  * def unflatten(list flat_data, list structure):             # <<<<<<<<<<<<<<
@@ -3664,7 +3647,7 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
           (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
           kw_args--;
         }
-        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 73, __pyx_L3_error)
+        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 77, __pyx_L3_error)
         else goto __pyx_L5_argtuple_error;
         CYTHON_FALLTHROUGH;
         case  1:
@@ -3672,14 +3655,14 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
           (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
           kw_args--;
         }
-        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 73, __pyx_L3_error)
+        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 77, __pyx_L3_error)
         else {
-          __Pyx_RaiseArgtupleInvalid("unflatten", 1, 2, 2, 1); __PYX_ERR(0, 73, __pyx_L3_error)
+          __Pyx_RaiseArgtupleInvalid("unflatten", 1, 2, 2, 1); __PYX_ERR(0, 77, __pyx_L3_error)
         }
       }
       if (unlikely(kw_args > 0)) {
         const Py_ssize_t kwd_pos_args = __pyx_nargs;
-        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "unflatten") < 0)) __PYX_ERR(0, 73, __pyx_L3_error)
+        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "unflatten") < 0)) __PYX_ERR(0, 77, __pyx_L3_error)
       }
     } else if (unlikely(__pyx_nargs != 2)) {
       goto __pyx_L5_argtuple_error;
@@ -3692,7 +3675,7 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
   }
   goto __pyx_L6_skip;
   __pyx_L5_argtuple_error:;
-  __Pyx_RaiseArgtupleInvalid("unflatten", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 73, __pyx_L3_error)
+  __Pyx_RaiseArgtupleInvalid("unflatten", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 77, __pyx_L3_error)
   __pyx_L6_skip:;
   goto __pyx_L4_argument_unpacking_done;
   __pyx_L3_error:;
@@ -3706,8 +3689,8 @@ PyObject *__pyx_args, PyObject *__pyx_kwds
   __Pyx_RefNannyFinishContext();
   return NULL;
   __pyx_L4_argument_unpacking_done:;
-  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_flat_data), (&PyList_Type), 1, "flat_data", 1))) __PYX_ERR(0, 73, __pyx_L1_error)
-  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_structure), (&PyList_Type), 1, "structure", 1))) __PYX_ERR(0, 73, __pyx_L1_error)
+  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_flat_data), (&PyList_Type), 1, "flat_data", 1))) __PYX_ERR(0, 77, __pyx_L1_error)
+  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_structure), (&PyList_Type), 1, "structure", 1))) __PYX_ERR(0, 77, __pyx_L1_error)
   __pyx_r = __pyx_pf_9pufferlib_10extensions_2unflatten(__pyx_self, __pyx_v_flat_data, __pyx_v_structure);
 
   /* function exit code */
@@ -3735,22 +3718,22 @@ static PyObject *__pyx_pf_9pufferlib_10extensions_2unflatten(CYTHON_UNUSED PyObj
   int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("unflatten", 1);
 
-  /* "pufferlib/extensions.pyx":74
+  /* "pufferlib/extensions.pyx":78
  * 
  * def unflatten(list flat_data, list structure):
  *     return unflatten_helper(flat_data, structure, 0, 0)[0]             # <<<<<<<<<<<<<<
  */
   __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
+  __pyx_t_1 = __pyx_f_9pufferlib_10extensions_unflatten_helper(__pyx_v_flat_data, __pyx_v_structure, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 78, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 78, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_r = __pyx_t_2;
   __pyx_t_2 = 0;
   goto __pyx_L0;
 
-  /* "pufferlib/extensions.pyx":73
+  /* "pufferlib/extensions.pyx":77
  *         return flat_data[data_idx], struct_idx, data_idx + 1
  * 
  * def unflatten(list flat_data, list structure):             # <<<<<<<<<<<<<<
@@ -3811,7 +3794,7 @@ static int __Pyx_CreateStringTabAndInitStrings(void) {
 }
 /* #### Code section: cached_builtins ### */
 static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
-  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 49, __pyx_L1_error)
+  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 53, __pyx_L1_error)
   return 0;
   __pyx_L1_error:;
   return -1;
@@ -3822,28 +3805,28 @@ static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
 
-  /* "pufferlib/extensions.pyx":31
+  /* "pufferlib/extensions.pyx":35
  *         flat_data.append(d)
  * 
  * def flatten(data):             # <<<<<<<<<<<<<<
  *     cdef list flat_data = []
  *     flatten_helper(data, flat_data)
  */
-  __pyx_tuple_ = PyTuple_Pack(2, __pyx_n_s_data, __pyx_n_s_flat_data); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 31, __pyx_L1_error)
+  __pyx_tuple_ = PyTuple_Pack(2, __pyx_n_s_data, __pyx_n_s_flat_data); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 35, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_tuple_);
   __Pyx_GIVEREF(__pyx_tuple_);
-  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple_, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pufferlib_extensions_pyx, __pyx_n_s_flatten, 31, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(0, 31, __pyx_L1_error)
+  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple_, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pufferlib_extensions_pyx, __pyx_n_s_flatten, 35, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(0, 35, __pyx_L1_error)
 
-  /* "pufferlib/extensions.pyx":73
+  /* "pufferlib/extensions.pyx":77
  *         return flat_data[data_idx], struct_idx, data_idx + 1
  * 
  * def unflatten(list flat_data, list structure):             # <<<<<<<<<<<<<<
  *     return unflatten_helper(flat_data, structure, 0, 0)[0]
  */
-  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_n_s_flat_data, __pyx_n_s_structure); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 73, __pyx_L1_error)
+  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_n_s_flat_data, __pyx_n_s_structure); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 77, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_tuple__3);
   __Pyx_GIVEREF(__pyx_tuple__3);
-  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pufferlib_extensions_pyx, __pyx_n_s_unflatten, 73, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 73, __pyx_L1_error)
+  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pufferlib_extensions_pyx, __pyx_n_s_unflatten, 77, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 77, __pyx_L1_error)
   __Pyx_RefNannyFinishContext();
   return 0;
   __pyx_L1_error:;
@@ -4123,7 +4106,7 @@ static CYTHON_SMALL_CODE int __pyx_pymod_exec_extensions(PyObject *__pyx_pyinit_
   __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
   {
     int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
-    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to extensions pseudovariable */
+    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "extensions" pseudovariable */
     if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
     pystate_addmodule_run = 1;
   }
@@ -4249,27 +4232,27 @@ if (!__Pyx_RefNanny) {
  */
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_VALUE, __pyx_int_4) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
 
-  /* "pufferlib/extensions.pyx":31
+  /* "pufferlib/extensions.pyx":35
  *         flat_data.append(d)
  * 
  * def flatten(data):             # <<<<<<<<<<<<<<
  *     cdef list flat_data = []
  *     flatten_helper(data, flat_data)
  */
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pufferlib_10extensions_1flatten, 0, __pyx_n_s_flatten, NULL, __pyx_n_s_pufferlib_extensions, __pyx_d, ((PyObject *)__pyx_codeobj__2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pufferlib_10extensions_1flatten, 0, __pyx_n_s_flatten, NULL, __pyx_n_s_pufferlib_extensions, __pyx_d, ((PyObject *)__pyx_codeobj__2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_flatten, __pyx_t_2) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
+  if (PyDict_SetItem(__pyx_d, __pyx_n_s_flatten, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "pufferlib/extensions.pyx":73
+  /* "pufferlib/extensions.pyx":77
  *         return flat_data[data_idx], struct_idx, data_idx + 1
  * 
  * def unflatten(list flat_data, list structure):             # <<<<<<<<<<<<<<
  *     return unflatten_helper(flat_data, structure, 0, 0)[0]
  */
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pufferlib_10extensions_3unflatten, 0, __pyx_n_s_unflatten, NULL, __pyx_n_s_pufferlib_extensions, __pyx_d, ((PyObject *)__pyx_codeobj__4)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9pufferlib_10extensions_3unflatten, 0, __pyx_n_s_unflatten, NULL, __pyx_n_s_pufferlib_extensions, __pyx_d, ((PyObject *)__pyx_codeobj__4)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 77, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_unflatten, __pyx_t_2) < 0) __PYX_ERR(0, 73, __pyx_L1_error)
+  if (PyDict_SetItem(__pyx_d, __pyx_n_s_unflatten, __pyx_t_2) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
   /* "pufferlib/extensions.pyx":1
@@ -4536,9 +4519,10 @@ static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg
 
 /* UnpackUnboundCMethod */
 static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
+    PyObject *result;
     PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
     if (unlikely(!selfless_args)) return NULL;
-    PyObject *result = PyObject_Call(method, selfless_args, kwargs);
+    result = PyObject_Call(method, selfless_args, kwargs);
     Py_DECREF(selfless_args);
     return result;
 }
@@ -4637,9 +4621,10 @@ static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
 
 /* IterFinish */
 static CYTHON_INLINE int __Pyx_IterFinish(void) {
+    PyObject* exc_type;
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
-    PyObject* exc_type = __Pyx_PyErr_CurrentExceptionType();
+    exc_type = __Pyx_PyErr_CurrentExceptionType();
     if (unlikely(exc_type)) {
         if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
             return -1;
@@ -4858,11 +4843,11 @@ static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyO
     {
         int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
         if (unlikely(eq != 0)) {
-            if (unlikely(eq < 0)) return NULL;  // error
+            if (unlikely(eq < 0)) return NULL;
             return kwvalues[i];
         }
     }
-    return NULL;  // not found (no exception set)
+    return NULL;
 }
 #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
 CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
@@ -4949,7 +4934,7 @@ static int __Pyx_ParseOptionalKeywords(
         if (*name) {
             values[name-argnames] = value;
 #if CYTHON_AVOID_BORROWED_REFS
-            Py_INCREF(value); // transfer ownership of value to values
+            Py_INCREF(value);
             Py_DECREF(key);
 #endif
             key = NULL;
@@ -4968,7 +4953,7 @@ static int __Pyx_ParseOptionalKeywords(
                         && _PyString_Eq(**name, key)) {
                     values[name-argnames] = value;
 #if CYTHON_AVOID_BORROWED_REFS
-                    value = NULL;  // ownership transferred to values
+                    value = NULL;
 #endif
                     break;
                 }
@@ -5000,7 +4985,7 @@ static int __Pyx_ParseOptionalKeywords(
                 if (cmp == 0) {
                     values[name-argnames] = value;
 #if CYTHON_AVOID_BORROWED_REFS
-                    value = NULL; // ownership transferred to values
+                    value = NULL;
 #endif
                     break;
                 }
@@ -6384,7 +6369,7 @@ static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func,
     default:
         return NULL;
     }
-    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
+    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
 }
 static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
 {
@@ -6843,7 +6828,7 @@ static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
     #else
     py_code = PyCode_NewEmpty(filename, funcname, py_line);
     #endif
-    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
+    Py_XDECREF(py_funcname);
     return py_code;
 bad:
     Py_XDECREF(py_funcname);
